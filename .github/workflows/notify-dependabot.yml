name: Dependabot PR Manager

on:
  workflow_dispatch:
  check_suite:
    types: [completed]
  status: {}
  pull_request:
    types: [closed]

jobs:
  handle_checks:
    # Run only for dependabot PRs when checks complete
    if: |
      github.actor == 'dependabot[bot]' && 
      (github.event_name == 'check_suite' || github.event_name == 'status') &&
      github.event.check_suite.conclusion != 'skipped'
    runs-on: ubuntu-latest
    
    steps:
      - name: Get associated PRs
        id: get-pr
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/commits/${{ github.sha }}/pulls
          mediaType: |
            {
              "previews": ["groot"]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract PR info
        id: pr-info
        run: |
          PR_DATA=$(echo '${{ steps.get-pr.outputs.data }}' | jq -r '.[0]')
          if [ -z "$PR_DATA" ] || [ "$PR_DATA" == "null" ]; then
            echo "No PR associated with this commit"
            echo "pr_number=0" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "pr_number=$(echo "$PR_DATA" | jq -r '.number')" >> $GITHUB_OUTPUT
          echo "pr_title=$(echo "$PR_DATA" | jq -r '.title')" >> $GITHUB_OUTPUT
          echo "pr_user=$(echo "$PR_DATA" | jq -r '.user.login')" >> $GITHUB_OUTPUT
          echo "pr_url=$(echo "$PR_DATA" | jq -r '.html_url')" >> $GITHUB_OUTPUT
          echo "pr_state=$(echo "$PR_DATA" | jq -r '.state')" >> $GITHUB_OUTPUT

      - name: Determine check conclusion
        id: check-conclusion
        run: |
          # For status events
          if [ "${{ github.event_name }}" == "status" ]; then
            if [ "${{ github.event.state }}" == "success" ]; then
              echo "conclusion=success" >> $GITHUB_OUTPUT
            else
              echo "conclusion=failure" >> $GITHUB_OUTPUT
            fi
          # For check_suite events
          else
            echo "conclusion=${{ github.event.check_suite.conclusion }}" >> $GITHUB_OUTPUT
          fi

      - name: Close unsuccessful PR
        if: |
          steps.pr-info.outputs.pr_number != '0' &&
          steps.pr-info.outputs.pr_state == 'open' &&
          steps.check-conclusion.outputs.conclusion != 'success'
        uses: superbrothers/close-pull-request@v3
        with:
          comment: "Automatically closed due to unsuccessful checks"
          token: ${{ secrets.GITHUB_TOKEN }}
          pull_request_number: ${{ steps.pr-info.outputs.pr_number }}

      - name: Notify Slack for successful PR
        if: |
          steps.pr-info.outputs.pr_number != '0' &&
          steps.check-conclusion.outputs.conclusion == 'success'
        uses: slackapi/slack-github-action@v1.25.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "âœ… Dependabot PR #${{ steps.pr-info.outputs.pr_number }} passed checks in ${{ github.repository }}",
              "username": "Dependabot Manager",
              "icon_emoji": ":white_check_mark:",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":robot_face: *Dependabot PR Ready* :package:"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository*\n<https://github.com/${{ github.repository }}|${{ github.repository }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*PR Number*\n#${{ steps.pr-info.outputs.pr_number }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Title*\n${{ steps.pr-info.outputs.pr_title }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author*\n${{ steps.pr-info.outputs.pr_user }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View PR",
                        "emoji": true
                      },
                      "url": "${{ steps.pr-info.outputs.pr_url }}"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Merge PR",
                        "emoji": true
                      },
                      "url": "${{ steps.pr-info.outputs.pr_url }}?quick_pull=1"
                    }
                  ]
                }
              ]
            }

  notify_closed:
    if: github.actor == 'dependabot[bot]' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack about closed PR
        uses: slackapi/slack-github-action@v1.25.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "ðŸ“¦ Dependabot PR #${{ github.event.pull_request.number }} was closed in ${{ github.repository }}",
              "username": "Dependabot Manager",
              "icon_emoji": ":package:",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":warning: *Dependabot PR Closed*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository*\n${{ github.repository }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*PR Number*\n#${{ github.event.pull_request.number }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Title*\n${{ github.event.pull_request.title }}"
                  }
                }
              ]
            }
